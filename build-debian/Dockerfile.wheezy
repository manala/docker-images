FROM debian:wheezy

MAINTAINER Manala <contact@manala.io>

ARG USER_ID
ARG GROUP_ID

ENV USER_DEFAULT="build" \
    USER_ID="${USER_ID:-1000}" \
    USER_SUDO="1" \
    GROUP_DEFAULT="build" \
    GROUP_ID="${GROUP_ID:-1000}"

USER root

# Packages
RUN echo "deb http://httpredir.debian.org/debian wheezy main\n\
deb-src http://httpredir.debian.org/debian wheezy main\n\
deb http://httpredir.debian.org/debian wheezy-updates main\n\
deb-src http://httpredir.debian.org/debian wheezy-updates main\n\
deb http://security.debian.org wheezy/updates main\n\
deb-src http://security.debian.org wheezy/updates main\n\
deb http://httpredir.debian.org/debian wheezy-backports main\n\
deb-src http://httpredir.debian.org/debian wheezy-backports main\n\
deb http://httpredir.debian.org/debian wheezy-backports-sloppy main\n\
deb-src http://httpredir.debian.org/debian wheezy-backports-sloppy main\n" > /etc/apt/sources.list \
    && echo "Package: *\n\
Pin: release a=wheezy-backports\n\
Pin-Priority: 600\n" > /etc/apt/preferences.d/backports \
    && echo "Package: *\n\
Pin: release a=wheezy-backports-sloppy\n\
Pin-Priority: 700\n" > /etc/apt/preferences.d/backports-sloppy \
    && apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade \
    && DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install \
# System
        sudo apt-transport-https adduser procps \
# Tools
        unzip wget curl ca-certificates less vim/wheezy-backports \
# Build
        build-essential \
        devscripts \
        dh-exec \
        dh-systemd/wheezy-backports \
        fakeroot \
        lintian \
        pkg-php-tools \
    && rm -rf /var/lib/apt/lists/*

# Su exec
ENV SU_EXEC_VERSION="0.2"
RUN curl -L https://github.com/ncopa/su-exec/archive/v${SU_EXEC_VERSION}.tar.gz \
  | tar zxfv - -C /tmp --strip-components=1 && \
  make --directory /tmp  && \
  mv /tmp/su-exec /usr/local/bin

# User
RUN addgroup --gid ${GROUP_ID} ${GROUP_DEFAULT} && \
    adduser --disabled-password --shell /bin/bash --gecos '${USER_DEFAULT^}' --uid ${USER_ID} --ingroup ${GROUP_DEFAULT} ${USER_DEFAULT}

# Entrypoint
COPY entrypoint.sh /usr/local/bin/
ENTRYPOINT ["entrypoint.sh"]

# Default command
CMD ["/bin/bash"]

# Working directory
WORKDIR /srv

# Goss
ENV GOSS_VERSION="0.3.1"
RUN curl -fsSL https://goss.rocks/install | GOSS_VER=v${GOSS_VERSION} sh
